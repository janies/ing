package main

import (
	"fmt"
	"os"

	"github.com/google/gopacket/pcap"
)

// Test cases

// Benchmarks

// Example test cases

func Example_packets_icmp() {
	var handle *pcap.Handle
	handle, _ = pcap.OpenOffline("testdata/icmp.pcap")
	defer handle.Close()

	// CL options
	config.Debug.PrintPackets = true
	config.Debug.PrintFlows = false
	config.ActiveTimeout = 1800
	config.IdleTimeout = 300
	config.OutputPrefix = "/tmp/ing/output/"
	config.OutputRotationInterval = 5
	config.OutputSlug = "-icmp"

	// State
	stats.NumBytes = 0
	stats.NumDecoded = 0
	stats.NumTruncated = 0
	stats.TotalPackets = 0
	stats.TotalFlows = 0

	done := make(chan struct{})
	defer close(done)
	wg.Add(3)
	inPackets := GeneratePackets(done, handle)
	inFlows, _ := AssignFlows(done, inPackets)
	WriteFlows(done, inFlows)
	wg.Wait()
	fmt.Printf("Processed %v packets (%v bytes) in %v flows with %v decoded, and %v truncated.\n",
		stats.TotalPackets, stats.NumBytes, stats.TotalFlows, stats.NumDecoded, stats.NumTruncated)
	os.RemoveAll(config.OutputPrefix)
	// Output:
	// 	2011-06-26 22:21:27.02426  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:27.02429  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:27.02817  ICMPv4 192.168.0.1 -> 192.168.0.89, typecode: EchoReply, payload: 32
	// 2011-06-26 22:21:28.02453  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:28.02485  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:28.02889  ICMPv4 192.168.0.1 -> 192.168.0.89, typecode: EchoReply, payload: 32
	// 2011-06-26 22:21:29.02547  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:29.02549  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:29.02974  ICMPv4 192.168.0.1 -> 192.168.0.89, typecode: EchoReply, payload: 32
	// 2011-06-26 22:21:30.02657  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:30.02660  ICMPv4 192.168.0.89 -> 192.168.0.1, typecode: EchoRequest, payload: 32
	// 2011-06-26 22:21:30.03047  ICMPv4 192.168.0.1 -> 192.168.0.89, typecode: EchoReply, payload: 32
	// Processed 12 packets (888 bytes) in 2 flows with 12 decoded, and 0 truncated.
}

func Example_packets_tcpCompleteV4() {
	var handle *pcap.Handle
	handle, _ = pcap.OpenOffline("testdata/tcp-complete-v4.pcap")
	defer handle.Close()

	// CL options
	config.Debug.PrintPackets = true
	config.Debug.PrintFlows = false
	config.ActiveTimeout = 1800
	config.IdleTimeout = 300
	config.OutputPrefix = "/tmp/ing/output/"
	config.OutputRotationInterval = 5
	config.OutputSlug = "-tcp-complete-v4"

	// State
	stats.NumBytes = 0
	stats.NumDecoded = 0
	stats.NumTruncated = 0
	stats.TotalPackets = 0
	stats.TotalFlows = 0

	done := make(chan struct{})
	defer close(done)
	wg.Add(3)
	inPackets := GeneratePackets(done, handle)
	inFlows, _ := AssignFlows(done, inPackets)
	WriteFlows(done, inFlows)
	wg.Wait()
	fmt.Printf("Processed %v packets (%v bytes) in %v flows with %v decoded, and %v truncated.\n",
		stats.TotalPackets, stats.NumBytes, stats.TotalFlows, stats.NumDecoded, stats.NumTruncated)
	os.RemoveAll(config.OutputPrefix)
	// Output:
	// 2009-04-27 16:00:04.06610  TCP 192.168.0.5:1449 -> 192.168.0.7:2111, payload: 0
	// 2009-04-27 16:00:04.08453  TCP 192.168.0.7:2111 -> 192.168.0.5:1449, payload: 0
	// 2009-04-27 16:00:04.08457  TCP 192.168.0.5:1449 -> 192.168.0.7:2111, payload: 0
	// 2009-04-27 16:00:07.17391  TCP 192.168.0.5:1449 -> 192.168.0.7:2111, payload: 0
	// 2009-04-27 16:00:07.17394  TCP 192.168.0.7:2111 -> 192.168.0.5:1449, payload: 0
	// Processed 5 packets (292 bytes) in 2 flows with 5 decoded, and 0 truncated.
}

func Example_packets_tcpCompleteV6() {
	var handle *pcap.Handle
	handle, _ = pcap.OpenOffline("testdata/tcp-complete-v6.pcap")
	defer handle.Close()

	// CL options
	config.Debug.PrintPackets = true
	config.Debug.PrintFlows = false
	config.ActiveTimeout = 1800
	config.IdleTimeout = 300
	config.OutputPrefix = "/tmp/ing/output/"
	config.OutputRotationInterval = 5
	config.OutputSlug = "-tcp-complete-v6"

	// State
	stats.NumBytes = 0
	stats.NumDecoded = 0
	stats.NumTruncated = 0
	stats.TotalPackets = 0
	stats.TotalFlows = 0

	done := make(chan struct{})
	defer close(done)
	wg.Add(3)
	inPackets := GeneratePackets(done, handle)
	inFlows, _ := AssignFlows(done, inPackets)
	WriteFlows(done, inFlows)
	wg.Wait()
	fmt.Printf("Processed %v packets (%v bytes) in %v flows with %v decoded, and %v truncated.\n",
		stats.TotalPackets, stats.NumBytes, stats.TotalFlows, stats.NumDecoded, stats.NumTruncated)
	os.RemoveAll(config.OutputPrefix)
	// Output:
	// 2009-04-27 21:57:03.69150  TCP fe80::5.1449 -> fe80::7.2111, payload: 0
	// 2009-04-27 21:57:03.69306  TCP fe80::7.2111 -> fe80::5.1449, payload: 0
	// 2009-04-27 21:57:03.69461  TCP fe80::5.1449 -> fe80::7.2111, payload: 0
	// 2009-04-27 21:57:03.69615  TCP fe80::5.1449 -> fe80::7.2111, payload: 0
	// 2009-04-27 21:57:03.69770  TCP fe80::7.2111 -> fe80::5.1449, payload: 0
	// Processed 5 packets (392 bytes) in 2 flows with 5 decoded, and 0 truncated.
}

func Example_packets_udpV4() {
	var handle *pcap.Handle
	handle, _ = pcap.OpenOffline("testdata/udp-v4.pcap")
	defer handle.Close()

	// CL options
	config.Debug.PrintPackets = true
	config.Debug.PrintFlows = false
	config.ActiveTimeout = 1800
	config.IdleTimeout = 300
	config.OutputPrefix = "/tmp/ing/output/"
	config.OutputRotationInterval = 5
	config.OutputSlug = "-udp-v4"

	// State
	stats.NumBytes = 0
	stats.NumDecoded = 0
	stats.NumTruncated = 0
	stats.TotalPackets = 0
	stats.TotalFlows = 0

	done := make(chan struct{})
	defer close(done)
	wg.Add(3)
	inPackets := GeneratePackets(done, handle)
	inFlows, _ := AssignFlows(done, inPackets)
	WriteFlows(done, inFlows)
	wg.Wait()
	fmt.Printf("Processed %v packets (%v bytes) in %v flows with %v decoded, and %v truncated.\n",
		stats.TotalPackets, stats.NumBytes, stats.TotalFlows, stats.NumDecoded, stats.NumTruncated)
	os.RemoveAll(config.OutputPrefix)
	// Output:
	// 2009-04-07 09:57:26.36958  UDP 192.168.0.6:1393 -> 199.45.32.43:53, payload: 32
	// 2009-04-07 09:57:26.38144  UDP 199.45.32.43:53 -> 192.168.0.6:1393, payload: 32
	// 2009-04-07 09:57:26.38343  UDP 192.168.0.6:1394 -> 199.45.32.43:53, payload: 32
	// 2009-04-07 09:57:26.39546  UDP 199.45.32.43:53 -> 192.168.0.6:1394, payload: 32
	// 2009-04-27 16:29:55.99037  UDP 192.168.0.5:1026 -> 83.170.6.76:3544, payload: 77
	// 2009-04-27 16:29:56.10216  UDP 83.170.6.76:3544 -> 192.168.0.5:1026, payload: 117
	// 2009-04-27 16:33:37.88300  UDP 192.168.0.5:1465 -> 199.45.32.43:53, payload: 117
	// 2009-04-27 16:33:37.89556  UDP 199.45.32.43:53 -> 192.168.0.5:1465, payload: 117
	// 2009-04-27 16:37:26.03775  UDP 192.168.0.7:35393 -> 199.45.32.43:53, payload: 117
	// 2009-04-27 16:37:26.05036  UDP 199.45.32.43:53 -> 192.168.0.7:35393, payload: 117
	// 2009-04-27 16:37:50.77412  UDP 192.168.0.7:33912 -> 203.178.141.194:53, payload: 117
	// 2009-04-27 16:37:50.97514  UDP 203.178.141.194:53 -> 192.168.0.7:33912, payload: 117
	// 2009-04-27 16:39:56.52384  UDP 192.168.0.7:41008 -> 199.45.32.43:53, payload: 117
	// 2009-04-27 16:39:56.92310  UDP 199.45.32.43:53 -> 192.168.0.7:41008, payload: 117
	// 2009-04-27 16:40:53.51539  UDP 192.168.0.7:37308 -> 199.45.32.43:53, payload: 117
	// 2009-04-27 16:40:53.52835  UDP 199.45.32.43:53 -> 192.168.0.7:37308, payload: 117
	// 2009-04-27 16:47:08.64744  UDP 192.168.0.7:56309 -> 199.45.32.43:53, payload: 117
	// 2009-04-27 16:47:08.65843  UDP 199.45.32.43:53 -> 192.168.0.7:56309, payload: 117
	// 2009-04-27 16:47:17.52596  UDP 192.168.0.7:45558 -> 199.45.32.43:53, payload: 117
	// 2009-04-27 16:47:17.53708  UDP 199.45.32.43:53 -> 192.168.0.7:45558, payload: 117
	// 2009-04-29 13:42:33.45696  UDP 192.168.0.7:56305 -> 199.45.32.43:53, payload: 117
	// 2009-04-29 13:42:33.47450  UDP 199.45.32.43:53 -> 192.168.0.7:56305, payload: 117
	// 2009-04-29 13:44:36.04307  UDP 192.168.0.7:53983 -> 199.45.32.43:53, payload: 117
	// 2009-04-29 13:44:36.05559  UDP 199.45.32.43:53 -> 192.168.0.7:53983, payload: 117
	// Processed 24 packets (3051 bytes) in 24 flows with 24 decoded, and 0 truncated.
}

func Example_packets_udpV6() {
	var handle *pcap.Handle
	handle, _ = pcap.OpenOffline("testdata/udp-v6.pcap")
	defer handle.Close()

	// CL options
	config.Debug.PrintPackets = true
	config.Debug.PrintFlows = false
	config.ActiveTimeout = 1800
	config.IdleTimeout = 300
	config.OutputPrefix = "/tmp/ing/output/"
	config.OutputRotationInterval = 5
	config.OutputSlug = "-udp-v6"

	// State
	stats.NumBytes = 0
	stats.NumDecoded = 0
	stats.NumTruncated = 0
	stats.TotalPackets = 0
	stats.TotalFlows = 0

	done := make(chan struct{})
	defer close(done)
	wg.Add(3)
	inPackets := GeneratePackets(done, handle)
	inFlows, _ := AssignFlows(done, inPackets)
	WriteFlows(done, inFlows)
	wg.Wait()
	fmt.Printf("Processed %v packets (%v bytes) in %v flows with %v decoded, and %v truncated.\n",
		stats.TotalPackets, stats.NumBytes, stats.TotalFlows, stats.NumDecoded, stats.NumTruncated)
	os.RemoveAll(config.OutputPrefix)
	// Output:
	// 2009-04-27 21:57:03.47668  UDP fe80::5.1026 -> fe80::76.3544, payload: 77
	// 2009-04-27 21:57:03.48219  UDP fe80::76.3544 -> fe80::5.1026, payload: 117
	// 2009-04-27 21:57:03.64097  UDP fe80::7.35393 -> fe80::43.53, payload: 117
	// 2009-04-27 21:57:03.64317  UDP fe80::43.53 -> fe80::7.35393, payload: 117
	// 2009-04-27 21:57:03.65489  UDP fe80::7.41008 -> fe80::43.53, payload: 117
	// 2009-04-27 21:57:03.67070  UDP fe80::7.56309 -> fe80::43.53, payload: 117
	// 2009-04-27 21:57:03.67286  UDP fe80::43.53 -> fe80::7.56309, payload: 117
	// 2009-04-27 21:57:04.15066  UDP fe80::7.45558 -> fe80::43.53, payload: 117
	// 2009-04-27 21:57:04.15282  UDP fe80::43.53 -> fe80::7.45558, payload: 117
	// 2009-04-27 21:57:04.22950  UDP fe80::7.33912 -> fe80::194.53, payload: 117
	// 2009-04-27 21:57:04.23171  UDP fe80::194.53 -> fe80::7.33912, payload: 117
	// 2009-04-27 21:57:04.37197  UDP fe80::5.1465 -> fe80::43.53, payload: 117
	// 2009-04-27 21:57:04.37414  UDP fe80::43.53 -> fe80::5.1465, payload: 117
	// 2009-04-27 21:57:04.38861  UDP fe80::7.37308 -> fe80::43.53, payload: 117
	// 2009-04-29 13:46:45.56711  UDP fe80::7.53983 -> fe80::43.53, payload: 117
	// 2009-04-29 13:46:45.56939  UDP fe80::43.53 -> fe80::7.53983, payload: 117
	// 2009-04-29 13:46:45.59107  UDP fe80::7.56305 -> fe80::43.53, payload: 117
	// 2009-04-29 13:46:45.59340  UDP fe80::43.53 -> fe80::7.56305, payload: 117
	// Processed 20 packets (3360 bytes) in 18 flows with 18 decoded, and 0 truncated.
}

func Example_packets_vlan() {
	var handle *pcap.Handle
	handle, _ = pcap.OpenOffline("testdata/vlan.pcap")
	defer handle.Close()

	// CL options
	config.Debug.PrintPackets = true
	config.Debug.PrintFlows = false
	config.ActiveTimeout = 1800
	config.IdleTimeout = 300
	config.OutputPrefix = "/tmp/ing/output/"
	config.OutputRotationInterval = 5
	config.OutputSlug = "-vlan"

	// State
	stats.NumBytes = 0
	stats.NumDecoded = 0
	stats.NumTruncated = 0
	stats.TotalPackets = 0
	stats.TotalFlows = 0

	done := make(chan struct{})
	defer close(done)
	wg.Add(3)
	inPackets := GeneratePackets(done, handle)
	inFlows, _ := AssignFlows(done, inPackets)
	WriteFlows(done, inFlows)
	wg.Wait()
	fmt.Printf("Processed %v packets (%v bytes) in %v flows with %v decoded, and %v truncated.\n",
		stats.TotalPackets, stats.NumBytes, stats.TotalFlows, stats.NumDecoded, stats.NumTruncated)
	os.RemoveAll(config.OutputPrefix)
	// Output:
	// 2012-07-18 15:09:51.25377  TCP 10.0.0.9:60285 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:09:51.25377  TCP 10.0.0.6:8080 -> 10.0.0.9:60285, payload: 0
	// 2012-07-18 15:09:56.03576  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:09:56.03580  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 0
	// 2012-07-18 15:09:56.03860  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:09:56.03893  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 483
	// 2012-07-18 15:09:56.03907  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1291
	// 2012-07-18 15:09:56.23476  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:00.74928  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 421
	// 2012-07-18 15:10:00.74951  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:00.74951  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:00.75135  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:00.75156  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 0
	// 2012-07-18 15:10:00.75457  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:00.75459  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:00.75463  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1270
	// 2012-07-18 15:10:00.75473  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:00.75770  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:00.79479  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 394
	// 2012-07-18 15:10:00.79504  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:00.79504  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:00.79786  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:00.79786  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 920
	// 2012-07-18 15:10:00.99680  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.20511  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 348
	// 2012-07-18 15:10:02.20535  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20535  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20536  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20536  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20536  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20536  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20537  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 240
	// 2012-07-18 15:10:02.20837  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.20837  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20838  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20838  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.20838  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.21110  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.21110  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.21110  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.21110  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.21110  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.21110  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.21111  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:02.21111  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1155
	// 2012-07-18 15:10:02.21131  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.21440  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.21457  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.21457  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:02.24165  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.11022  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 541
	// 2012-07-18 15:10:04.11073  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.11073  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.11073  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.11073  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1231
	// 2012-07-18 15:10:04.11554  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.11554  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13284  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 505
	// 2012-07-18 15:10:04.13300  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 498
	// 2012-07-18 15:10:04.13300  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:04.13300  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:04.13300  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1116
	// 2012-07-18 15:10:04.13318  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 320
	// 2012-07-18 15:10:04.13334  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13336  TCP 10.0.0.6:8080 -> 10.0.0.9:60344, payload: 0
	// 2012-07-18 15:10:04.13373  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13373  TCP 10.0.0.6:8080 -> 10.0.0.9:60345, payload: 0
	// 2012-07-18 15:10:04.13429  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13429  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 0
	// 2012-07-18 15:10:04.13441  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13442  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 0
	// 2012-07-18 15:10:04.13498  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13498  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13498  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 0
	// 2012-07-18 15:10:04.13498  TCP 10.0.0.9:60350 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13498  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 0
	// 2012-07-18 15:10:04.13503  TCP 10.0.0.6:8080 -> 10.0.0.9:60350, payload: 0
	// 2012-07-18 15:10:04.13524  TCP 10.0.0.9:60351 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13527  TCP 10.0.0.6:8080 -> 10.0.0.9:60351, payload: 0
	// 2012-07-18 15:10:04.13592  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13705  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 503
	// 2012-07-18 15:10:04.13736  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 634
	// 2012-07-18 15:10:04.13843  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13863  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13863  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13885  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 507
	// 2012-07-18 15:10:04.13885  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13885  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 503
	// 2012-07-18 15:10:04.13888  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 501
	// 2012-07-18 15:10:04.13888  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 895
	// 2012-07-18 15:10:04.13889  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13899  TCP 10.0.0.6:8080 -> 10.0.0.9:60344, payload: 270
	// 2012-07-18 15:10:04.13899  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 501
	// 2012-07-18 15:10:04.13899  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13899  TCP 10.0.0.9:60350 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13899  TCP 10.0.0.6:8080 -> 10.0.0.9:60345, payload: 497
	// 2012-07-18 15:10:04.13903  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 505
	// 2012-07-18 15:10:04.13904  TCP 10.0.0.9:60351 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.13909  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 501
	// 2012-07-18 15:10:04.13919  TCP 10.0.0.9:60350 -> 10.0.0.6:8080, payload: 503
	// 2012-07-18 15:10:04.13919  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 624
	// 2012-07-18 15:10:04.13924  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 502
	// 2012-07-18 15:10:04.13929  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 532
	// 2012-07-18 15:10:04.13969  TCP 10.0.0.9:60351 -> 10.0.0.6:8080, payload: 503
	// 2012-07-18 15:10:04.13970  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 504
	// 2012-07-18 15:10:04.14025  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 515
	// 2012-07-18 15:10:04.14025  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 697
	// 2012-07-18 15:10:04.14150  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 477
	// 2012-07-18 15:10:04.14202  TCP 10.0.0.6:8080 -> 10.0.0.9:60351, payload: 694
	// 2012-07-18 15:10:04.14213  TCP 10.0.0.6:8080 -> 10.0.0.9:60350, payload: 665
	// 2012-07-18 15:10:04.14334  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 500
	// 2012-07-18 15:10:04.14355  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14355  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14356  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14356  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14356  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14356  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14356  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 240
	// 2012-07-18 15:10:04.14365  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14365  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14365  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14422  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 503
	// 2012-07-18 15:10:04.14453  TCP 10.0.0.6:8080 -> 10.0.0.9:60345, payload: 1460
	// 2012-07-18 15:10:04.14453  TCP 10.0.0.6:8080 -> 10.0.0.9:60345, payload: 1460
	// 2012-07-18 15:10:04.14453  TCP 10.0.0.6:8080 -> 10.0.0.9:60345, payload: 83
	// 2012-07-18 15:10:04.14617  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14617  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14618  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14618  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14618  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14618  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14618  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14618  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14619  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14619  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14976  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14976  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14976  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14976  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14997  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14997  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14997  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14997  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14998  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14998  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14998  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14998  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.14998  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1460
	// 2012-07-18 15:10:04.14998  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 1047
	// 2012-07-18 15:10:04.14999  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.15002  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.15353  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.15418  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.15584  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.15599  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.33044  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.34257  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.34257  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.34275  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.34347  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.34347  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.34348  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.35341  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.35343  TCP 10.0.0.9:60351 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:04.35350  TCP 10.0.0.9:60350 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:06.59074  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 677
	// 2012-07-18 15:10:06.59135  TCP 10.0.0.6:8080 -> 10.0.0.9:60344, payload: 1460
	// 2012-07-18 15:10:06.59135  TCP 10.0.0.6:8080 -> 10.0.0.9:60344, payload: 1460
	// 2012-07-18 15:10:06.59668  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:06.59668  TCP 10.0.0.6:8080 -> 10.0.0.9:60344, payload: 1067
	// 2012-07-18 15:10:06.82637  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:07.70223  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 704
	// 2012-07-18 15:10:07.70455  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 1460
	// 2012-07-18 15:10:07.70455  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 1460
	// 2012-07-18 15:10:07.70765  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:07.70781  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 662
	// 2012-07-18 15:10:08.01200  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 662
	// 2012-07-18 15:10:08.03315  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:08.03360  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:08.36246  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 642
	// 2012-07-18 15:10:08.36308  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 1460
	// 2012-07-18 15:10:08.36308  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 1460
	// 2012-07-18 15:10:08.36607  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:08.36607  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 618
	// 2012-07-18 15:10:08.66306  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 618
	// 2012-07-18 15:10:08.69199  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:08.69509  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:09.63192  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 751
	// 2012-07-18 15:10:09.63353  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 1460
	// 2012-07-18 15:10:09.63354  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 1460
	// 2012-07-18 15:10:09.63806  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:09.63815  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 1460
	// 2012-07-18 15:10:09.63815  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 853
	// 2012-07-18 15:10:09.64288  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:09.64855  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 506
	// 2012-07-18 15:10:09.64902  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 1460
	// 2012-07-18 15:10:09.64902  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 1460
	// 2012-07-18 15:10:09.65221  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:09.65221  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 1460
	// 2012-07-18 15:10:09.65222  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 1460
	// 2012-07-18 15:10:09.65222  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 549
	// 2012-07-18 15:10:09.65554  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:09.92855  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:10.84925  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 635
	// 2012-07-18 15:10:10.84985  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:10.84985  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 1460
	// 2012-07-18 15:10:10.84985  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 928
	// 2012-07-18 15:10:10.85246  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:11.05274  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:24.64204  TCP 10.0.0.6:8080 -> 10.0.0.9:60351, payload: 0
	// 2012-07-18 15:10:24.64206  TCP 10.0.0.6:8080 -> 10.0.0.9:60350, payload: 0
	// 2012-07-18 15:10:24.64295  TCP 10.0.0.6:8080 -> 10.0.0.9:60338, payload: 0
	// 2012-07-18 15:10:24.64395  TCP 10.0.0.6:8080 -> 10.0.0.9:60345, payload: 0
	// 2012-07-18 15:10:24.64564  TCP 10.0.0.9:60351 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:24.64576  TCP 10.0.0.9:60350 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:24.64604  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:24.64604  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:25.85302  TCP 10.0.0.9:60351 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:25.85319  TCP 10.0.0.9:60350 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:25.85347  TCP 10.0.0.9:60338 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:25.85347  TCP 10.0.0.9:60345 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:27.09114  TCP 10.0.0.6:8080 -> 10.0.0.9:60344, payload: 0
	// 2012-07-18 15:10:27.09357  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:28.20415  TCP 10.0.0.6:8080 -> 10.0.0.9:60346, payload: 0
	// 2012-07-18 15:10:28.20614  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:28.86319  TCP 10.0.0.6:8080 -> 10.0.0.9:60348, payload: 0
	// 2012-07-18 15:10:28.86672  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:30.13332  TCP 10.0.0.6:8080 -> 10.0.0.9:60347, payload: 0
	// 2012-07-18 15:10:30.13689  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:30.14838  TCP 10.0.0.6:8080 -> 10.0.0.9:60349, payload: 0
	// 2012-07-18 15:10:30.15176  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:31.34934  TCP 10.0.0.6:8080 -> 10.0.0.9:60335, payload: 0
	// 2012-07-18 15:10:31.35285  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:35.85314  TCP 10.0.0.9:60344 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:35.85334  TCP 10.0.0.9:60346 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:35.85349  TCP 10.0.0.9:60348 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:35.85374  TCP 10.0.0.9:60347 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:35.85389  TCP 10.0.0.9:60349 -> 10.0.0.6:8080, payload: 0
	// 2012-07-18 15:10:35.85404  TCP 10.0.0.9:60335 -> 10.0.0.6:8080, payload: 0
	// Processed 239 packets (144569 bytes) in 22 flows with 239 decoded, and 0 truncated.
}
